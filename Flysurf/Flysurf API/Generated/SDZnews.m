/*
	SDZnews.m
	The implementation classes and methods for the news web service.
	Generated by SudzC.com
*/

#import "SDZnews.h"
				
#import "Soap.h"
	

/* Implementation of the service */
				
@implementation SDZnews

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://dotnet.flysurf.com/services/news.asmx";
			self.namespace = @"http://tempuri.org/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SDZnews*) service {
		return [SDZnews serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SDZnews*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[SDZnews alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns NSString*.  */
	- (SoapRequest*) Login: (id <SoapDelegate>) handler key: (NSString*) key email: (NSString*) email password: (NSString*) password
	{
		return [self Login: handler action: nil key: key email: email password: password];
	}

	- (SoapRequest*) Login: (id) _target action: (SEL) _action key: (NSString*) key email: (NSString*) email password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: key forName: @"key"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: email forName: @"email"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
		NSString* _envelope = [Soap createEnvelope: @"Login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/Login" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns id.  */
	- (SoapRequest*) AddNewsComment: (id <SoapDelegate>) handler key: (NSString*) key idNews: (int) idNews idPerson: (int) idPerson comment: (NSString*) comment
	{
		return [self AddNewsComment: handler action: nil key: key idNews: idNews idPerson: idPerson comment: comment];
	}

	- (SoapRequest*) AddNewsComment: (id) _target action: (SEL) _action key: (NSString*) key idNews: (int) idNews idPerson: (int) idPerson comment: (NSString*) comment
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: key forName: @"key"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: idNews] forName: @"idNews"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: idPerson] forName: @"idPerson"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: comment forName: @"comment"]];
		NSString* _envelope = [Soap createEnvelope: @"AddNewsComment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/AddNewsComment" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns id.  */
	- (SoapRequest*) AddNews: (id <SoapDelegate>) handler key: (NSString*) key idNewsTypes: (int) idNewsTypes idPerson: (int) idPerson title: (NSString*) title newsText: (NSString*) newsText newsPicture: (NSString*) newsPicture
	{
		return [self AddNews: handler action: nil key: key idNewsTypes: idNewsTypes idPerson: idPerson title: title newsText: newsText newsPicture: newsPicture];
	}

	- (SoapRequest*) AddNews: (id) _target action: (SEL) _action key: (NSString*) key idNewsTypes: (int) idNewsTypes idPerson: (int) idPerson title: (NSString*) title newsText: (NSString*) newsText newsPicture: (NSString*) newsPicture
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: key forName: @"key"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: idNewsTypes] forName: @"idNewsTypes"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: idPerson] forName: @"idPerson"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: title forName: @"title"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: newsText forName: @"newsText"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: newsPicture forName: @"newsPicture"]];
		NSString* _envelope = [Soap createEnvelope: @"AddNews" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/AddNews" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) GetNewsTypes: (id <SoapDelegate>) handler key: (NSString*) key
	{
		return [self GetNewsTypes: handler action: nil key: key];
	}

	- (SoapRequest*) GetNewsTypes: (id) _target action: (SEL) _action key: (NSString*) key
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: key forName: @"key"]];
		NSString* _envelope = [Soap createEnvelope: @"GetNewsTypes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/GetNewsTypes" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) NewsList: (id <SoapDelegate>) handler key: (NSString*) key idNewsType: (int) idNewsType pageSize: (int) pageSize nbrePage: (int) nbrePage
	{
		return [self NewsList: handler action: nil key: key idNewsType: idNewsType pageSize: pageSize nbrePage: nbrePage];
	}

	- (SoapRequest*) NewsList: (id) _target action: (SEL) _action key: (NSString*) key idNewsType: (int) idNewsType pageSize: (int) pageSize nbrePage: (int) nbrePage
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: key forName: @"key"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: idNewsType] forName: @"idNewsType"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: pageSize] forName: @"pageSize"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: nbrePage] forName: @"nbrePage"]];
		NSString* _envelope = [Soap createEnvelope: @"NewsList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/NewsList" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}


@end
	